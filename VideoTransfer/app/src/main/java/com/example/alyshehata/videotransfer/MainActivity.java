package com.example.alyshehata.videotransfer;

import com.google.android.glass.content.Intents;
import com.google.android.glass.media.Sounds;
import com.google.android.glass.widget.CardBuilder;
import com.google.android.glass.widget.CardScrollAdapter;
import com.google.android.glass.widget.CardScrollView;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.media.AudioManager;
import android.os.Bundle;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;

import android.os.AsyncTask;

import java.io.BufferedOutputStream;
import java.io.ObjectOutputStream;

import java.net.Socket;
import java.io.FileInputStream;
import java.io.OutputStream;

import java.io.BufferedInputStream;
import java.io.File;

public class MainActivity extends Activity {

    /**
     * {@link CardScrollView} to use as the main content view.
     */
    private CardScrollView mCardScroller;
    private static final int TAKE_PICTURE_REQUEST = 0;

    /**
     * "Hello World!" {@link View} generated by {@link #buildView()}.
     */
    private View mView;

    @Override
    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);

        mView = buildView();

        mCardScroller = new CardScrollView(this);
        mCardScroller.setAdapter(new CardScrollAdapter() {
            @Override
            public int getCount() {
                return 1;
            }

            @Override
            public Object getItem(int position) {
                return mView;
            }

            @Override
            public View getView(int position, View convertView, ViewGroup parent) {
                return mView;
            }

            @Override
            public int getPosition(Object item) {
                if (mView.equals(item)) {
                    return 0;
                }
                return AdapterView.INVALID_POSITION;
            }
        });
        // Handle the TAP event.
        mCardScroller.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                        Intent intent = new Intent(MediaStore.ACTION_VIDEO_CAPTURE);
                        startActivityForResult(intent, TAKE_PICTURE_REQUEST);

            }
        });
        setContentView(mCardScroller);
    }

    @Override
    protected void onResume() {
        super.onResume();
        mCardScroller.activate();
    }

    @Override
    protected void onPause() {
        mCardScroller.deactivate();
        super.onPause();
    }

    /**
     * Builds a Glass styled "Hello World!" view using the {@link CardBuilder} class.
     */
    private View buildView() {
        CardBuilder card = new CardBuilder(this, CardBuilder.Layout.TEXT);
        card.setText("Tap to start recording");
        return card.getView();
    }
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == TAKE_PICTURE_REQUEST && resultCode == RESULT_OK) {
            String videoPath = data.getStringExtra(Intents.EXTRA_VIDEO_FILE_PATH);
            new doitAsync(videoPath).execute();
        }

        super.onActivityResult(requestCode, resultCode, data);
    }

}


class doitAsync extends AsyncTask<Void, Integer, Integer> {
    private String filePath;

    doitAsync(String path){
        filePath = path;
    }
    @Override
    protected void onPostExecute(Integer result) {
        if (result == -1) {
            System.exit(0);
        }
    }

    @Override
    protected Integer doInBackground(Void... params) {
        Socket s = null;
        ObjectOutputStream get = null;

        try {
            s = new Socket("192.168.1.10", 8888);
            get = new ObjectOutputStream(s.getOutputStream());
            byte[] bytearray = new byte[1024*16];
            int u = 0;
            FileInputStream fis = new FileInputStream(filePath);
            BufferedInputStream bis = new BufferedInputStream(fis);

            int readLength = -1;
            while ((readLength = bis.read(bytearray)) > 0) {
                get.write(bytearray, 0, readLength);
                u = u + readLength;
            }
            System.out.println("Sent: " + u + " Bytes");
            System.out.println("File sent");

            bis.close();
            get.close();
            s.close();
        } catch (Exception e) {
            e.printStackTrace();
            return -1; // failed
        }
        return 0;
    }
}